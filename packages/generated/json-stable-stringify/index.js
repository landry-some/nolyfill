"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function(){return t}});const e=function(e,t){return t};function t(t,r){let n=r&&"space"in r&&r.space?"number"==typeof r.space?" ".repeat(r.space):r.space:"",l=!!r&&"cycles"in r&&"boolean"==typeof r.cycles&&r.cycles,o=r&&"replacer"in r&&r.replacer?r.replacer:e,i="function"==typeof r?r:null==r?void 0:r.cmp,u=i?e=>{let t=i.length>2&&function(t){return e[t]},r=t?{get:t}:void 0;return(t,n)=>i({key:t,value:e[t]},{key:n,value:e[n]},r)}:void 0,c=new Set;return function e(t,r,i,f){let s=n?`
${n.repeat(f)}`:"",p=n?": ":":";if((null==i?void 0:i.toJSON)&&"function"==typeof i.toJSON&&(i=i.toJSON()),void 0===(i=o.call(t,r,i)))return;if("object"!=typeof i||null===i)return JSON.stringify(i);if(Array.isArray(i)){let t=[];for(let r=0;r<i.length;r++){let l=e(i,r,i[r],f+1)||JSON.stringify(null);t.push(s+n+l)}return`[${t.join(",")}${s}]`}if(c.has(i)){if(l)return JSON.stringify("__cycle__");throw TypeError("Converting circular structure to JSON")}c.add(i);let a=Object.keys(i).sort(null==u?void 0:u(i)),y=[];for(let t=0;t<a.length;t++){let r=a[t],l=e(i,r,i[r],f+1);if(!l)continue;let o=JSON.stringify(r)+p+l;y.push(s+n+o)}return c.delete(i),`{${y.join(",")}${s}}`}({"":t},"",t,0)}
((typeof exports.default === 'object' && exports.default !== null) || typeof exports.default === 'function') && (Object.assign(exports.default,exports), module.exports = exports.default);
